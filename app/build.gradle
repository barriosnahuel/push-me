apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.getkeepsafe.dexcount'
apply from: "$project.rootProject.projectDir/linters.gradle"

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    defaultConfig {
        applicationId "com.github.barriosnahuel.vossosunboton"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 5
        versionName '2.0.0'
    }

    resourcePrefix 'app_'

    signingConfigs {
        release {

            File keystoreFile = file("$project.rootProject.projectDir/nahuelbarrios.keystore-appbundle.pkcs12")
            File propertiesFile = file("$project.rootProject.projectDir/secure.properties")
            if (keystoreFile.exists() && propertiesFile.exists()) {
                logger.warn('WARNING: Release keystore is available for app signing')
                Properties properties = new Properties()
                properties.load(new FileInputStream(propertiesFile))

                keyAlias properties.getProperty('key.alias')
                keyPassword properties.getProperty('key.password')
                storeFile keystoreFile
                storePassword properties.getProperty('store.password')
            } else {
                keyAlias "androiddebugkey"
                keyPassword "android"
                storeFile file("$project.rootProject.projectDir/debug_keystore.keystore")
                storePassword "android"
            }
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true

            all {
                testLogging {
                    events 'PASSED', 'FAILED'
                }
            }
        }
    }

    buildTypes {
        debug {
            // Comment this suffix to use a debug build at Internal App Sharing: https://play.google.com/apps/publish/internalappsharing/
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG ${new Date().format("YYYY-MM-dd HH:mm:ss")}"
            multiDexEnabled true
        }

        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkDependencies true
    }

    dynamicFeatures = [":feature_addbutton"]

}

dependencies {
    implementation project(':commons_file')
    implementation project(':commons_android')
    implementation project(':model')

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.1'

    implementation platform ('com.google.firebase:firebase-bom:26.1.0')

    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-perf'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'

    debugImplementation 'com.facebook.flipper:flipper:0.68.0'
    debugImplementation 'com.facebook.soloader:soloader:0.9.0'

    testImplementation 'junit:junit:4.13.1'

    testImplementation 'androidx.test:core:1.3.0'
    testImplementation ('org.robolectric:robolectric:4.4'){
        // https://github.com/robolectric/robolectric/issues/5245
        exclude group: 'com.google.auto.service', module: 'auto-service'
    }

    testImplementation 'com.google.truth:truth:1.1'
    testImplementation 'io.mockk:mockk:1.10.2'
}